version: '3'

services:
  # QUIC client
  client:
    build:
      context: nodes/client
    entrypoint: /root/entrypoint.bash "client" ${CLIENT_DOMAIN_ROUTER_ADDR} ${SERVER_DOMAIN_SUBNET}
    container_name: client
    networks:
      client_domain:
        ipv4_address: ${CLIENT_DOMAIN_CLIENT_ADDR}
      data_collection:
    ports:
      - "8081:8080"
    extra_hosts:
      - "server:${SERVER_DOMAIN_SERVER_ADDR}"
    volumes:
      - ./etc/client:/root/share
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    stdin_open: true
    tty: true

  # QUIC server
  server:
    build:
      context: nodes/server
    entrypoint: /root/entrypoint.bash "server" ${SERVER_DOMAIN_ROUTER_ADDR} ${CLIENT_DOMAIN_SUBNET}
    container_name: server
    networks:
      server_domain:
        ipv4_address: ${SERVER_DOMAIN_SERVER_ADDR}
      data_collection:
    ports:
      - "8082:8080"
    extra_hosts:
      - "client:${CLIENT_DOMAIN_CLIENT_ADDR}"
    volumes:
      - ./etc/server:/root/share
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    stdin_open: true
    tty: true

  # router
  router:
    build:
      context: nodes/router
    entrypoint: /root/entrypoint.bash "router"
    container_name: router
    networks:
      server_domain:
        ipv4_address: ${SERVER_DOMAIN_ROUTER_ADDR}
      client_domain:
        ipv4_address: ${CLIENT_DOMAIN_ROUTER_ADDR}
      data_collection:
    ports:
      - "8083:8080"
    volumes:
      - ./etc/router:/root/share
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    stdin_open: true
    tty: true

  # measurement store, analysis & graphing infra
  telegraf:
    image: telegraf:1.4.0
    container_name: telegraf
    volumes:
      - ./etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    networks:
      data_collection:
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"

  influxdb:
    image: influxdb:1.3.5
    container_name: influxdb
    networks:
      data_collection:
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"

  chronograf:
    image: chronograf:1.3.8
    container_name: chronograf
    environment:
      INFLUXDB_URL: http://influxdb:8086
    networks:
      data_collection:
    ports:
      - "8888:8888"

networks:
  client_domain:
    ipam:
      config:
        - subnet: ${CLIENT_DOMAIN_SUBNET}
  server_domain:
    ipam:
      config:
        - subnet: ${SERVER_DOMAIN_SUBNET}
  data_collection:


# vim: ai ts=2 sw=2 et sts=2 ft=yaml
